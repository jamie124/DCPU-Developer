; Program to do printing
:start set I, 0
    ; Print all the string characters.
:loop set A, [string+I]
    add I, 1
    ife A, 0
        set PC, end
    jsr putc
    set PC, loop
:end set PC, start

; Put the character specified by A    
:putc set PUSH, B ; Destination address of character
    
    ife A, [newline]
        set PC, putc_newline
    
    ; Calculate address
    set B, [putc_line]
    mul B, 32 ; 32 * line + col
    add B, [putc_col]
    add B, 0x8000
    
    set [B], A ; Put char
    
    ; Update index
    add [putc_col], 1
    ifg 32, [putc_col]
        set PC, putc_end ; Still room on the line
        
    ; We need to go to the next line
:putc_newline add [putc_line], 1
    set [putc_col], 0
    ifg 16, [putc_line]
        set PC, putc_end ; Still room on the screen
    
    ; We need to scroll!
    jsr scroll
    set [putc_line], 16
:putc_end set B, POP
    set PC, POP ; return

    ; Scroll the terminal up one line
    ; Each line is 32 words
:scroll set PUSH, I ; Index in video ram
    set PUSH, A ; Index of thing we're copying
    
    set I, 0x8000
:scroll_loop set A, I
    add A, 32 ; Corresponding character on next line
    ifg A, 0x8400 ; End of video ram
        set PC, scroll_end ; return
    set [I], [A] ; Copy back 32 words
    add I, 1
    set PC, scroll_loop
    
:scroll_end set A, POP
    set I, POP
    set PC, POP ; return
    
; Globals
:putc_line dat 0
:putc_col dat 0
:string dat "Hello,\nscrolling,\nmy old friend; I've come to talk with you again.\n", 0
:newline dat "\n"
    